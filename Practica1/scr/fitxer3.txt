==4453== Memcheck, a memory error detector
==4453== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==4453== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==4453== Command: ./test
==4453== 
==4453== Invalid read of size 8
==4453==    at 0x400A74: main (qsort_strcmp.c:56)
==4453==  Address 0x51f3b40 is 0 bytes after a block of size 80,000 alloc'd
==4453==    at 0x4C28C20: malloc (vg_replace_malloc.c:296)
==4453==    by 0x400988: main (qsort_strcmp.c:38)
==4453== 
==4453== Invalid read of size 1
==4453==    at 0x4C2C1A2: strlen (vg_replace_strmem.c:412)
==4453==    by 0x4EA099B: puts (ioputs.c:36)
==4453==    by 0x400A7E: main (qsort_strcmp.c:56)
==4453==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==4453== 
==4453== 
==4453== Process terminating with default action of signal 11 (SIGSEGV)
==4453==  Access not within mapped region at address 0x0
==4453==    at 0x4C2C1A2: strlen (vg_replace_strmem.c:412)
==4453==    by 0x4EA099B: puts (ioputs.c:36)
==4453==    by 0x400A7E: main (qsort_strcmp.c:56)
==4453==  If you believe this happened as a result of a stack
==4453==  overflow in your program's main thread (unlikely but
==4453==  possible), you can try to increase the size of the
==4453==  main thread stack using the --main-stacksize= flag.
==4453==  The main thread stack size used in this run was 8388608.
==4453== 
==4453== HEAP SUMMARY:
==4453==     in use at exit: 188,822 bytes in 10,001 blocks
==4453==   total heap usage: 10,004 allocs, 3 frees, 269,958 bytes allocated
==4453== 
==4453== LEAK SUMMARY:
==4453==    definitely lost: 0 bytes in 0 blocks
==4453==    indirectly lost: 0 bytes in 0 blocks
==4453==      possibly lost: 0 bytes in 0 blocks
==4453==    still reachable: 188,822 bytes in 10,001 blocks
==4453==         suppressed: 0 bytes in 0 blocks
==4453== Rerun with --leak-check=full to see details of leaked memory
==4453== 
==4453== For counts of detected and suppressed errors, rerun with: -v
==4453== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
